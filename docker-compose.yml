version: '3'
services:
  nginx:
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - webnet

  dream-captcher:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    restart: always
    networks:
      - webnet

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - webnet

networks:
  webnet:
# version: '3'

# services:
#   nginx:
#     image: nginx:latest
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#       - /etc/letsencrypt:/etc/letsencrypt
#       - /var/lib/letsencrypt:/var/lib/letsencrypt
#     depends_on:
#       - dream-captcher
#     networks:
#       - webnet

#   dream-captcher:
#     build: .
#     ports:
#       - "3000:3000"
#     environment:
#       - NODE_ENV=production
#     restart: always
#     networks:
#       - webnet

#   certbot:
#     image: certbot/certbot
#     volumes:
#       - /etc/letsencrypt:/etc/letsencrypt
#       - /var/lib/letsencrypt:/var/lib/letsencrypt
#       - /var/log/letsencrypt:/var/log/letsencrypt
#       - /var/www/certbot:/var/www/certbot
#     entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
#     networks:
#       - webnet

# networks:
#   webnet: