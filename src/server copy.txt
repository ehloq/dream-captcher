import cors from 'cors'
import morgan from 'morgan';
// import requestIp from 'request-ip';
import express, { Express } from "express";
import path from 'path';
import Routes from './routes/ehloq.js';

// Initializations
const app: Express = express();

// Settings npx tsc --watch
const port = process.env.PORT || 3000;

// Middlewares
app.use(cors());
app.use(morgan('dev'));
app.use(express.urlencoded({extended: false}));
app.use(express.json());

// Sirve archivos estáticos desde la carpeta pública
app.use(express.static('public'));


// Middleware para obtener la IP del cliente
const jsMiddleware = (req: express.Request, res: express.Response, next: express.NextFunction) => {
    // const clientIp = requestIp.getClientIp(req);
    // console.log("IP del cliente:", clientIp);

    // Validar si la solicitud es de tipo GET y la ruta contiene ".js"
    if (req.method === 'GET' && req.path.endsWith('.js')) {
        // Responder con código JavaScript (por ejemplo, un archivo .js estático)
        res.setHeader("Content-Type", "text/javascript");
        res.write(`console.log('¡Hola desde mi archivo .js!');`);
    } else {
        // Continuar con el siguiente middleware o ruta
        next();
    }
};

app.use(jsMiddleware);


// Routes
app.use('/', Routes);

app.listen(port, () => {
    console.log(`[server]: Server is running at http://localhost:${port}`);
});